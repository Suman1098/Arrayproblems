You are given an array items, where each items[i] = [typei, colori, namei] describes the type, color, and name of the ith item. You are also given a rule represented by two strings, ruleKey and ruleValue.

The ith item is said to match the rule if one of the following is true:

ruleKey == "type" and ruleValue == typei.
ruleKey == "color" and ruleValue == colori.
ruleKey == "name" and ruleValue == namei.
Return the number of items that match the given rule.

 

Example 1:

Input: items = [["phone","blue","pixel"],["computer","silver","lenovo"],["phone","gold","iphone"]], ruleKey = "color", ruleValue = "silver"
Output: 1
Explanation: There is only one item matching the given rule, which is ["computer","silver","lenovo"].
--------------------------------
class Solution {
    public int countMatches(List<List<String>> items, String ruleKey, String ruleValue) {
         /*if(items.size()==0 && items==null)
            return 0;
        int index;
        int matches=0;
        if(ruleKey.startsWith("t"))
            index=0;
        else if(ruleKey.startsWith("c"))
            index=1;
        else index=2;
            
        for(List<String> s:items){
            if(s.get(index).equals(ruleValue))
                matches++;
        }
        return matches;*/
        /*int index=0;
        if(ruleKey.equals("color"))
        {
            index=1;
        }
        else if(ruleKey.equals("name"))
        {
            index=2;
        }
        int count=0;
        for(List<String> rn: items)
        {
            if(rn.get(index).equals(ruleValue))
            {
                count++;
            }
        }
        return count;*/
        int res = 0;
        for(int i=0; i<items.size(); i++){
            if(ruleKey.equals("type") && items.get(i).get(0).equals(ruleValue)) res++;
            if(ruleKey.equals("color") && items.get(i).get(1).equals(ruleValue)) res++;
            if(ruleKey.equals("name") && items.get(i).get(2).equals(ruleValue)) res++;
        }
        return res;
    }
}
